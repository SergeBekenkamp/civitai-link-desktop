name: Build/release Electron app

on:
  push:
    tags:
      - v*.*.*

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      # download 'SSLcom/esigner-codesign' to a folder called 'esigner-codesign' in the root of the project
      - name: Checkout esigner-codesign repository (Windows)
        if: contains(matrix.os, 'windows')
        uses: actions/checkout@v3
        with:
          repository: 'SSLcom/esigner-codesign'
          path: esigner-codesign

      - name: NPM Build
        if: contains(matrix.os, 'windows')
        run: npm run build

      # builds, signs, and publishes - actual signing happens within electron-builder.js
      - name: Publish (Windows)
        if: contains(matrix.os, 'windows')
        run: npm exec -- electron-builder build --win --config electron-builder.js
        env:
          GH_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          # NOTE: must explicitly pass in even the parameters that esigner-codesign says are optional since we're not using the action directly, but rather passing the params in as env vars:
          CODE_SIGN_SCRIPT_PATH: '${{ github.workspace }}/esigner-codesign/dist/index.js'
          INPUT_COMMAND: 'sign'
          INPUT_FILE_PATH: '${{ github.workspace }}/dist/civitai-link-1.10.16-setup.exe'
          INPUT_OVERRIDE: 'true'
          INPUT_MALWARE_BLOCK: 'false'
          INPUT_CLEAN_LOGS: 'false'
          INPUT_JVM_MAX_MEMORY: '1024M'
          INPUT_ENVIRONMENT_NAME: 'PROD'
          INPUT_USERNAME: ${{ secrets.ES_USERNAME }}
          INPUT_PASSWORD: ${{ secrets.ES_PASSWORD }}
          # INPUT_TOTP_SECRET: ${{ secrets.SSL_COM_TOTP_SECRET }}
          INPUT_CREDENTIAL_ID: ${{ secrets.CREDENTIAL_ID }}

      - name: release
        uses: softprops/action-gh-release@v1
        if: always()
        with:
          draft: true
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
